function [field_fluctuations] = testDipoleMovement(incident_field,...
    n_movements,movement_amount,k0,alpha,z_2D,static_dipole_positions,...
    moving_dipole_positions,z_sources,z_detectors) %exclusion_radius,do_show_pol_plots)
    
    n_points_1D = size(z_2D,1);
    source_at_detectors = sourceAtDetectors(k0,incident_field,z_sources,...
        z_detectors);
    field_fluctuations = zeros(length(z_detectors),n_movements);
    for n = 1:n_movements
        if n == 1
            moved_dipole_positions = moving_dipole_positions;
        else
            moved_dipole_positions = moving_dipole_positions...
                + movement_amount.*(randn(size(moving_dipole_positions))...
                + 1i*randn(size(moving_dipole_positions)));
        end
        % [total_field,~,~,~] = DDA_true2D(k0,alpha,z_2D,...
        %     exclusion_radius,z_sources,incident_field,...
        %     vertcat(static_dipole_positions,moved_dipole_positions),...
        %     do_show_pol_plots);
        
        [total_field,~] = DDA_true2D_onlyOutputs(k0,alpha,z_detectors,...
            z_sources,incident_field,source_at_detectors,...
            vertcat(static_dipole_positions,moved_dipole_positions));
        field_fluctuations(:,n) = total_field;
    end
end